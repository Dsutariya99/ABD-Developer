[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "AuthenticationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "google.generativeai",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "google.generativeai",
        "description": "google.generativeai",
        "detail": "google.generativeai",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "planner_project.core.migrations.0001_initial",
        "description": "planner_project.core.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Trip',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "planner_project.core.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CoreConfig",
        "kind": 6,
        "importPath": "planner_project.core.apps",
        "description": "planner_project.core.apps",
        "peekOfCode": "class CoreConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core'",
        "detail": "planner_project.core.apps",
        "documentation": {}
    },
    {
        "label": "Trip",
        "kind": 6,
        "importPath": "planner_project.core.models",
        "description": "planner_project.core.models",
        "peekOfCode": "class Trip(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    destination = models.CharField(max_length=100)\n    start_date = models.DateField()\n    end_date = models.DateField()\n    interests = models.TextField(help_text=\"e.g., History, Food, Adventure\")\n    generated_itinerary = models.JSONField(null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"Trip to {self.destination} for {self.user.username}\"",
        "detail": "planner_project.core.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "planner_project.core.urls",
        "description": "planner_project.core.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.index, name='index'),\n    path('signup/', views.signup_view, name='signup'),\n    path('login/', views.login_view, name='login'),\n    path('logout/', views.logout_view, name='logout'),\n]",
        "detail": "planner_project.core.urls",
        "documentation": {}
    },
    {
        "label": "signup_view",
        "kind": 2,
        "importPath": "planner_project.core.views",
        "description": "planner_project.core.views",
        "peekOfCode": "def signup_view(request):\n    if request.method == 'POST':\n        form = UserCreationForm(request.POST)\n        if form.is_valid():\n            user = form.save()\n            login(request, user)\n            return redirect('index')\n    else:\n        form = UserCreationForm()\n    return render(request, 'core/login.html', {'form': form, 'page': 'signup'})",
        "detail": "planner_project.core.views",
        "documentation": {}
    },
    {
        "label": "login_view",
        "kind": 2,
        "importPath": "planner_project.core.views",
        "description": "planner_project.core.views",
        "peekOfCode": "def login_view(request):\n    if request.method == 'POST':\n        form = AuthenticationForm(data=request.POST)\n        if form.is_valid():\n            user = form.get_user()\n            login(request, user)\n            return redirect('index')\n    else:\n        form = AuthenticationForm()\n    return render(request, 'core/login.html', {'form': form, 'page': 'login'})",
        "detail": "planner_project.core.views",
        "documentation": {}
    },
    {
        "label": "logout_view",
        "kind": 2,
        "importPath": "planner_project.core.views",
        "description": "planner_project.core.views",
        "peekOfCode": "def logout_view(request):\n    logout(request)\n    return redirect('login')\n# --- Main Application View with AI ---\n@login_required\ndef index(request):\n    if request.method == 'POST':\n        destination = request.POST.get('destination')\n        days = request.POST.get('days')\n        interests = request.POST.get('interests')",
        "detail": "planner_project.core.views",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "planner_project.core.views",
        "description": "planner_project.core.views",
        "peekOfCode": "def index(request):\n    if request.method == 'POST':\n        destination = request.POST.get('destination')\n        days = request.POST.get('days')\n        interests = request.POST.get('interests')\n        # Use the Gemini 1.5 Pro model\n        model = genai.GenerativeModel('gemini-1.5-pro-latest') # <-- 👈 UPDATED\n        # AI Module 1: Itinerary Generation\n        itinerary_prompt = f\"\"\"\n        Create a detailed travel itinerary for a trip to {destination} for {days} days.",
        "detail": "planner_project.core.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "planner_project.planner_project.asgi",
        "description": "planner_project.planner_project.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "planner_project.planner_project.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-x7g85j9mbvj33jqbar^@=j-(ht#lkeiviu=h@9de$_2xr^ge+o'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-x7g85j9mbvj33jqbar^@=j-(ht#lkeiviu=h@9de$_2xr^ge+o'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n        'core', # Add your app",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n        'core', # Add your app\n]\nMIDDLEWARE = [",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'planner_project.urls'",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "ROOT_URLCONF = 'planner_project.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "WSGI_APPLICATION = 'planner_project.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# You should also have this line from the previous instructions\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'core/static')]\n# It's also good practice to define STATIC_ROOT for when you deploy the project",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# You should also have this line from the previous instructions\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'core/static')]\n# It's also good practice to define STATIC_ROOT for when you deploy the project\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# You should also have this line from the previous instructions\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'core/static')]\n# It's also good practice to define STATIC_ROOT for when you deploy the project\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nLOGIN_URL = 'login'",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# You should also have this line from the previous instructions\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'core/static')]\n# It's also good practice to define STATIC_ROOT for when you deploy the project\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nLOGIN_URL = 'login'\nLOGIN_REDIRECT_URL = 'index'",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# You should also have this line from the previous instructions\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'core/static')]\n# It's also good practice to define STATIC_ROOT for when you deploy the project\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nLOGIN_URL = 'login'\nLOGIN_REDIRECT_URL = 'index'\nLOGOUT_REDIRECT_URL = 'login'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "STATICFILES_DIRS = [os.path.join(BASE_DIR, 'core/static')]\n# It's also good practice to define STATIC_ROOT for when you deploy the project\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nLOGIN_URL = 'login'\nLOGIN_REDIRECT_URL = 'index'\nLOGOUT_REDIRECT_URL = 'login'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nLOGIN_URL = 'login'\nLOGIN_REDIRECT_URL = 'index'\nLOGOUT_REDIRECT_URL = 'login'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_URL",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "LOGIN_URL = 'login'\nLOGIN_REDIRECT_URL = 'index'\nLOGOUT_REDIRECT_URL = 'login'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = 'index'\nLOGOUT_REDIRECT_URL = 'login'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "LOGOUT_REDIRECT_URL = 'login'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "planner_project.planner_project.settings",
        "description": "planner_project.planner_project.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "planner_project.planner_project.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "planner_project.planner_project.urls",
        "description": "planner_project.planner_project.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('core.urls')), # Include your app's URLs\n]",
        "detail": "planner_project.planner_project.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "planner_project.planner_project.wsgi",
        "description": "planner_project.planner_project.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "planner_project.planner_project.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "planner_project.manage",
        "description": "planner_project.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'planner_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "planner_project.manage",
        "documentation": {}
    }
]